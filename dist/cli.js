#!/usr/bin/env node
var e=require("fs"),n=require("stream"),t=require("child_process"),r=require("os"),o=require("path");function s(r,o,s){const{elmBin:i,tmpDir:a,runnerModuleName:c,isNodeStderr:u,isColorOutput:l}=r,f=o||`${a}/${c}.elm`,m=s||`${a}/${c}.js`;try{t.execSync(`"${i}" make ${f} --output ${m}`,{stdio:["ignore","ignore","inherit"]})}catch(e){process.exit()}const d=l?"function o(a){console.log(a.map(([m,n,v])=>'[36m'+m+'[0m'+'.'+'[33m'+n+'\\n'+'[0m'+v).join('\\n\\n'))};let r={};(function(){!":"function o(a){console.log(a.map(([m,n,v])=>m+'.'+n+'\\n'+v).join('\\n\\n'))};let r={};(function(){!",p=`}).call(r);r.Elm.${c}.init({flags:''}).ports.toJs.subscribe(o);`,h=e.createReadStream(m),g=n.Readable.from(d),v=n.Readable.from(p),y=t.spawn("node");y.stdout.pipe(process.stdout),u&&y.stderr.pipe(process.stderr),g.pipe(y.stdin,{end:!1}),g.on("end",()=>{h.pipe(y.stdin,{end:!1}),h.on("end",()=>{v.pipe(y.stdin)})})}process.stdout.write("");const i=e=>e.split(","),a=[{name:"mainOptions",opts:[{name:"elmBin",def:"elm",key:"b"},{name:"tmpDir",def:"elm-stuff",key:"t"},{name:"runnerModuleName",def:"NodeConsole_",key:"n"},{name:"isNodeStderr",key:"e",desc:"output stderr of compiled js"},{name:"isCachedRunner",key:"C",desc:"reuse elm runner file ($tmpDir)/($runnerModuleName).elm"},{name:"cachedRunner",key:"c",desc:"reuse elm runner file, path"},{name:"isColorOutput",key:"q"}]},{name:"varOptions",desc:"Which top level variables to select.\nEach option (except isAll) is comma separated,\nso commas can't be used in regexpes",opts:[{name:"isAll",key:"A"},{name:"predefinedNoParse",key:"w",fn:i,desc:"create elm runner without touching *.elm files"},{name:"predefined",key:"l",fn:i,desc:"exact variable names"},{name:"prefixes",key:"p",fn:i},{name:"suffixes",key:"s",fn:i},{name:"regexpes",key:"r",fn:i}]}],c=function(e,n){const t=new Map,r=new Map,o=new Map,s={};n.forEach(e=>{s[e.name]={},e.opts&&e.opts.forEach(n=>{t.set(n.name,e.name),n.key&&r.set(n.key,n.name),n.fn&&o.set(n.name,n.fn),n.def&&(s[e.name][n.name]=n.fn&&n.fn(n.def)||n.def)})});const i=Object.entries(e).reduce((e,[n,s])=>{if(!s)return e;const i=r.get(n)||t.has(n)&&n,a=t.get(i);if(i&&a){const n=o.get(i);e[a][i]=n&&n(s)||s}return e},s);return i.elmFiles=e._,i}((e=>{let n={},t=[];const r=e=>isNaN(e)?"true"===e.toString().toLowerCase()||"false"!==e.toString().toLowerCase()&&e:Number(e),o=e=>e.replace(/^\-+/g,"");for(let s=0;s<e.length;s++){const i=e[s].indexOf("="),a="-"===e[s].charAt(0)&&e.length-1>=s+1&&-1===e[s+1].indexOf("=")&&"-"!==e[s+1].charAt(0),c=o(-1===i?e[s]:e[s].slice(0,i));if(-1!==i)n[c]=r(e[s].slice(i+1));else if(a)n[c]=r(e[s+1]),s++;else if("-"===e[s].charAt(0))if("-"===e[s].charAt(1))n[c]=!0;else for(let e=0;e<c.length;e++)n[c.charAt(e)]=!0;else t.push(r(c))}return Object.assign(n,{_:t})})(process.argv.slice(2)),a);if(process.env.DEBUG&&console.log(c),0!==Object.keys(c.varOptions).length&&c.elmFiles&&0!==c.elmFiles.length)!async function({mainOptions:n,varOptions:t,elmFiles:r}){const{isCachedRunner:o,cachedRunner:i}=n;if(o||i)return void s(n,i||void 0);const{predefinedNoParse:a,isAll:c,predefined:u,prefixes:f,suffixes:d,regexpes:p}=t;let h;if(a){const{gatherModulesData:e}=await Promise.resolve().then((function(){return l}));h=await e(r,a)}else if(c||u||f||d||p){const{gatherModulesData:e,varNameExaminerFactory:n}=await Promise.resolve().then((function(){return m})),o=n(t);h=await e(r,o)}h&&async function(n,t){const{tmpDir:r,runnerModuleName:o}=n,i=`${r}/${o}.elm`,a=`${r}/${o}.js`;e.writeFileSync(i,function(e,n){return[`port module ${e} exposing (main)`,"import Platform exposing (Program)",n.map(e=>"import "+e.name).join("\n"),"port toJs : List (List String) -> Cmd msg","main : Program String () Never","main = Platform.worker","    { init = \\_ -> ((), toJs [",n.flatMap(e=>e.vars.map(n=>(([e,n])=>`        ["${e}","${n}",Debug.toString ${e}.${n}]`)([e.name,n]))).join(",\n"),"    ])","    , update = \\_ _ -> (() , Cmd.none)","    , subscriptions = \\_ -> Sub.none","    }"].join("\n")}(o,t)),s(n,i,a)}(n,h)}(c);else{const e="usage: elm-node-console -A t M1.elm M2.elm\n        elm-node-console -s out,log M1.elm M2.elm\n        All boolean options must be followed by some value if precede positional\n        arguments (due to usage of simple cli parser)";console.log(function(e){let n="";return e.forEach(({name:e,desc:t,opts:o})=>{t&&(n+=t+r.EOL),o&&o.forEach(({name:e,def:t,key:o,desc:s})=>{o&&(n+="-"+o+" "),n+="--"+e,t&&(n+="\t\t"+`(default: ${t})`),s&&(n+=" (?) "+s),n+=r.EOL}),n+=r.EOL}),n}(a),e)}function u(e,n){return n.reduce((n,t)=>{let r;return e.find(e=>(r=function(e,n){const t=o.relative(e,n);return t&&!t.startsWith("..")&&!o.isAbsolute(t)?t.split(/[\\/]/g):void 0}(e,t.replace(/\.elm$/,"")),r)),r?n.push(r.join(".")):console.warn(`${t} is not in elm.json source-directories`),n},[])}var l=Object.freeze({__proto__:null,gatherModulesData:async function(n,t){const r=u(JSON.parse(e.readFileSync("elm.json","utf8"))["source-directories"],n).reduce((e,n)=>(e.push({name:n,vars:t}),e),[]);return Promise.resolve(r)}});function f(e){return/[ \n\r\t]/.test(e)}var m=Object.freeze({__proto__:null,gatherModulesData:function(n,t){const r=[],o=function(e){function n(e){"\n"===e&&(l=i)}function t(e,n=f){return function(t){n(t)||(m=t,l=e)}}function r(e=(e=>!0),n,t=f){return function(r){if(t(r)){if(!e(m))return!0;l=n}else m+=r}}function o(){m.length>0&&p.add(m),m=""}function s(e){")"===e?(o(),p.has("..")&&(g=e=>!0),l=n):","===e?o():f(e)||(m+=e)}function i(e){"\n"!==e&&(f(e)?l=n:(m=e,l=a))}function a(e){f(e)?l="type"===m?n:c:m+=e}function c(t){f(t)||("="!==t?l=n:(g(m)&&e(m)&&v.push(m),l=n))}const u=t(r(e=>"module"===e,t(r(e=>(d=e,!0),t(r(e=>"exposing"===e,t((function(e){if("("!==m)return!0;m=f(e)?"":e,l=s}))))))));let l=u,m="",d="",p=new Set;const h=e=>p.has(e);let g=h,v=[];return{reset:function(){l=u,m="",d="",p=new Set,g=h,v=[]},feedSymbol:l,feedChunk:function(e){for(let n=0;n<e.length;++n)if(l(e[n]))return!0},getResults:function(){if(d&&v.length>0)return{name:d,vars:v.slice()}}}}(t);let s=Promise.resolve([]);return n.forEach(n=>{s=s.then(()=>function(n,t){return new Promise((r,o)=>{t.reset();const s=e.createReadStream(n,{encoding:"utf8"});s.on("data",e=>{t.feedChunk(e)&&s.close()}),s.on("end",()=>{const e=t.getResults();r(e)})})}(n,o)).then(e=>{e&&r.push(e)})}),s.then(()=>r)},varNameExaminerFactory:function(e){const{isAll:n,predefined:t,prefixes:r,suffixes:o,regexpes:s}=e;if(n)return()=>!0;const i=[];return t&&i.push(function(e){const n=new Set(e);return function(e){return n.has(e)}}(t)),r&&i.push(function(e){return 1===e.length?n=>n.startsWith(e[0]):n=>e.some(e=>n.startsWith(e))}(r)),o&&i.push(function(e){return 1===e.length?n=>n.endsWith(e[0]):n=>e.some(e=>n.endsWith(e))}(o)),s&&i.push(function(e){const n=e.map(e=>RegExp(e));return e=>n.some(n=>n.test(e))}(s)),e=>i.some(n=>n(e))}});
